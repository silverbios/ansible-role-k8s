- name: Ensure each host is in /etc/hosts
  lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{ hostvars[item]['ansible_hostname'] }}"
    state: present
  loop: "{{ groups['all'] }}"
  when: hostvars[item]['ansible_default_ipv4']['address'] is defined

- name: Create the 'k8s' user
  ansible.builtin.user:
    name: k8s
    append: "yes"
    state: present
    createhome: "yes"
    shell: /bin/bash

- name: Create the 'k8s' user
  ansible.builtin.user:
    name: etcd
    append: "yes"
    state: present
    createhome: "no"
    shell: /bin/false
  when: "'k8s_masters' in group_names"

- name: Allow 'k8s' to have passwordless sudo
  copy:
    dest: /etc/sudoers.d/k8s
    content: |
      k8s ALL=(ALL) NOPASSWD: ALL
    owner: root
    group: root
    mode: 0640
    validate: visudo -cf %s

- name: Create ssh-client-keypair for client
  openssh_keypair:
    path: ~/.ssh/id_ed25519_k8s.pub
    type: ed25519

- name: Set up authorized keys for the k8s user
  authorized_key: user=k8s key="{{ item }}"
  with_file:
    - ~/.ssh/id_ed25519_k8s.pub

# - name: Disable swap
#   ansible.builtin.command: swapoff -a

# - name: Ensure swap is disabled in /etc/fstab
#   ansible.builtin.lineinfile:
#     path: /etc/fstab
#     regexp: '^\s*\S+\s+none\s+swap\s+sw\s+0\s+0'
#     line: '#\\1'
#     backrefs: true

- name: Set sysctl parameters and reload if necessary
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: true
    state: present
    reload: true
    sysctl_file: /etc/sysctl.d/99-network.conf
  loop:
    - { name: "net.ipv4.ip_forward", value: "1" }
    - { name: "net.core.default_qdisc", value: "fq" }
    - { name: "net.ipv4.tcp_congestion_control", value: "bbr" }
